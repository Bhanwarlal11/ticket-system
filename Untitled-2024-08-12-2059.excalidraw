{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "RrNrEsIIycMsu-Xve9lyh",
      "type": "text",
      "x": -9912.61665545047,
      "y": -33.52181225948539,
      "width": 687.5990600585938,
      "height": 340,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bAt",
      "roundness": null,
      "seed": 551920060,
      "version": 419,
      "versionNonce": 1613653764,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734086677084,
      "link": null,
      "locked": false,
      "text": "admin\nmanager\nteam members\nuser\n\n\n\nadmin \n- oauth\n- create categories\n- risk level => low , medium , high\n- solution => specific category => specific reply => based on their escalation\n\n\nif query is not resolve then , it sent to the team member => manager => admin\n\n ",
      "fontSize": 16,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "admin\nmanager\nteam members\nuser\n\n\n\nadmin \n- oauth\n- create categories\n- risk level => low , medium , high\n- solution => specific category => specific reply => based on their escalation\n\n\nif query is not resolve then , it sent to the team member => manager => admin\n\n ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "-2wLhoTO8KsGwL_0aXj1C",
      "type": "text",
      "x": -9094.051210840636,
      "y": 127.48171037662418,
      "width": 668.799072265625,
      "height": 80,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bAu",
      "roundness": null,
      "seed": 412595132,
      "version": 144,
      "versionNonce": 857492868,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734086844930,
      "link": null,
      "locked": false,
      "text": "user\n- login => jwt\n- generate ticket => query , select Category, date, reply, status(open.....)\n- ",
      "fontSize": 16,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "user\n- login => jwt\n- generate ticket => query , select Category, date, reply, status(open.....)\n- ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ZmskQb1HfZGDq5F6jFDRD",
      "type": "text",
      "x": -7850.755609318833,
      "y": -514.0903796082866,
      "width": 1161.598388671875,
      "height": 1700,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bAv",
      "roundness": null,
      "seed": 356198972,
      "version": 3,
      "versionNonce": 661100164,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734088080986,
      "link": null,
      "locked": false,
      "text": "Here's a recommended file structure for your ticket system. It follows a modular and scalable approach for a MERN stack application:\n\nProject Structure\ngraphql\nCopy code\nticket-system/\n├── backend/\n│   ├── config/\n│   │   ├── db.js                 # Database connection\n│   │   ├── oauth.js              # OAuth configuration\n│   │   └── jwt.js                # JWT utility functions\n│   ├── controllers/\n│   │   ├── authController.js     # Handles admin and user authentication\n│   │   ├── categoryController.js # Manages categories and subcategories\n│   │   ├── ticketController.js   # Handles ticket creation and updates\n│   │   └── solutionController.js # Manages solutions\n│   ├── middlewares/\n│   │   ├── authMiddleware.js     # Protect routes based on roles (admin, manager, etc.)\n│   │   ├── errorHandler.js       # Global error handling middleware\n│   │   └── escalateMiddleware.js # Logic for ticket escalation\n│   ├── models/\n│   │   ├── Category.js           # Category schema\n│   │   ├── SubCategory.js        # Subcategory schema\n│   │   ├── Ticket.js             # Ticket schema\n│   │   ├── Solution.js           # Solution schema\n│   │   └── User.js               # User schema with role management\n│   ├── routes/\n│   │   ├── authRoutes.js         # Authentication routes\n│   │   ├── categoryRoutes.js     # Routes for categories and subcategories\n│   │   ├── ticketRoutes.js       # Routes for ticket creation and updates\n│   │   └── solutionRoutes.js     # Routes for solutions\n│   ├── utils/\n│   │   ├── emailSender.js        # Utility for sending emails\n│   │   └── timeUtils.js          # Utilities for time-based operations\n│   ├── server.js                 # Main server file\n│   └── package.json              # Dependencies for backend\n├── frontend/\n│   ├── public/                   # Public assets\n│   │   └── index.html            # HTML template\n│   ├── src/\n│   │   ├── api/                  # API calls\n│   │   │   ├── authApi.js        # API for authentication\n│   │   │   ├── categoryApi.js    # API for categories\n│   │   │   ├── ticketApi.js      # API for tickets\n│   │   │   └── solutionApi.js    # API for solutions\n│   │   ├── components/           # Reusable components\n│   │   │   ├── AdminPanel/       # Admin-specific components\n│   │   │   ├── UserPanel/        # User-specific components\n│   │   │   └── Shared/           # Components shared across roles\n│   │   ├── contexts/             # React Context API for global state\n│   │   │   ├── AuthContext.js    # Context for authentication\n│   │   │   └── RoleContext.js    # Context for role-based access\n│   │   ├── pages/                # Page components\n│   │   │   ├── AdminDashboard.js # Admin dashboard\n│   │   │   ├── UserDashboard.js  # User dashboard\n│   │   │   └── Login.js          # Login page\n│   │   ├── App.js                # Main App component\n│   │   ├── index.js              # Entry point\n│   │   └── styles/               # CSS or Tailwind setup\n│   │       └── globals.css       # Global styles\n│   └── package.json              # Dependencies for frontend\n└── README.md                     # Project documentation\nKey Highlights\nSeparation of Concerns:\n\ncontrollers handle the business logic.\nroutes define the endpoints.\nmodels handle the MongoDB schemas.\nRole-Based Access: Middleware in authMiddleware.js ensures secure access control based on roles.\n\nScalability: Subdivide functionality into smaller files (e.g., separate APIs for categories and tickets) for easier management.\n\nFrontend-Backend Communication: Use RESTful APIs to connect the backend to the React frontend.\n\nError Handling: Centralized error handling through errorHandler.js in the backend.\n\nLet me know if you'd like me to provide code for any specific part!\n\n\n\n\n\n\n\n",
      "fontSize": 16,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Here's a recommended file structure for your ticket system. It follows a modular and scalable approach for a MERN stack application:\n\nProject Structure\ngraphql\nCopy code\nticket-system/\n├── backend/\n│   ├── config/\n│   │   ├── db.js                 # Database connection\n│   │   ├── oauth.js              # OAuth configuration\n│   │   └── jwt.js                # JWT utility functions\n│   ├── controllers/\n│   │   ├── authController.js     # Handles admin and user authentication\n│   │   ├── categoryController.js # Manages categories and subcategories\n│   │   ├── ticketController.js   # Handles ticket creation and updates\n│   │   └── solutionController.js # Manages solutions\n│   ├── middlewares/\n│   │   ├── authMiddleware.js     # Protect routes based on roles (admin, manager, etc.)\n│   │   ├── errorHandler.js       # Global error handling middleware\n│   │   └── escalateMiddleware.js # Logic for ticket escalation\n│   ├── models/\n│   │   ├── Category.js           # Category schema\n│   │   ├── SubCategory.js        # Subcategory schema\n│   │   ├── Ticket.js             # Ticket schema\n│   │   ├── Solution.js           # Solution schema\n│   │   └── User.js               # User schema with role management\n│   ├── routes/\n│   │   ├── authRoutes.js         # Authentication routes\n│   │   ├── categoryRoutes.js     # Routes for categories and subcategories\n│   │   ├── ticketRoutes.js       # Routes for ticket creation and updates\n│   │   └── solutionRoutes.js     # Routes for solutions\n│   ├── utils/\n│   │   ├── emailSender.js        # Utility for sending emails\n│   │   └── timeUtils.js          # Utilities for time-based operations\n│   ├── server.js                 # Main server file\n│   └── package.json              # Dependencies for backend\n├── frontend/\n│   ├── public/                   # Public assets\n│   │   └── index.html            # HTML template\n│   ├── src/\n│   │   ├── api/                  # API calls\n│   │   │   ├── authApi.js        # API for authentication\n│   │   │   ├── categoryApi.js    # API for categories\n│   │   │   ├── ticketApi.js      # API for tickets\n│   │   │   └── solutionApi.js    # API for solutions\n│   │   ├── components/           # Reusable components\n│   │   │   ├── AdminPanel/       # Admin-specific components\n│   │   │   ├── UserPanel/        # User-specific components\n│   │   │   └── Shared/           # Components shared across roles\n│   │   ├── contexts/             # React Context API for global state\n│   │   │   ├── AuthContext.js    # Context for authentication\n│   │   │   └── RoleContext.js    # Context for role-based access\n│   │   ├── pages/                # Page components\n│   │   │   ├── AdminDashboard.js # Admin dashboard\n│   │   │   ├── UserDashboard.js  # User dashboard\n│   │   │   └── Login.js          # Login page\n│   │   ├── App.js                # Main App component\n│   │   ├── index.js              # Entry point\n│   │   └── styles/               # CSS or Tailwind setup\n│   │       └── globals.css       # Global styles\n│   └── package.json              # Dependencies for frontend\n└── README.md                     # Project documentation\nKey Highlights\nSeparation of Concerns:\n\ncontrollers handle the business logic.\nroutes define the endpoints.\nmodels handle the MongoDB schemas.\nRole-Based Access: Middleware in authMiddleware.js ensures secure access control based on roles.\n\nScalability: Subdivide functionality into smaller files (e.g., separate APIs for categories and tickets) for easier management.\n\nFrontend-Backend Communication: Use RESTful APIs to connect the backend to the React frontend.\n\nError Handling: Centralized error handling through errorHandler.js in the backend.\n\nLet me know if you'd like me to provide code for any specific part!\n\n\n\n\n\n\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "NLMcFLvIT8u2nZq0n1ImP",
      "type": "text",
      "x": -8990.374054516855,
      "y": 621.6894398087131,
      "width": 255.19964599609375,
      "height": 20,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bAx",
      "roundness": null,
      "seed": 34464644,
      "version": 33,
      "versionNonce": 1900091068,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734088428204,
      "link": null,
      "locked": false,
      "text": "npm i mongoose express bcrypt",
      "fontSize": 16,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "npm i mongoose express bcrypt",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "JVfrZCWE_R23y3OmJBsRl",
      "type": "text",
      "x": -9945.915663431568,
      "y": 394.86041328554825,
      "width": 915.19873046875,
      "height": 380,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bAy",
      "roundness": null,
      "seed": 1346940932,
      "version": 3,
      "versionNonce": 518447932,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734096371478,
      "link": null,
      "locked": false,
      "text": "3. Automatic Escalation Workflow\nThe escalation process can be automated using a job scheduler or a ticket management system. Here's how:\n\nStep 1: Set a Time Limit\nEach ticket has a time limit before it should escalate. For example:\n\nIf no action is taken within 24 hours, escalate to the next level.\nStep 2: Assign Escalation Roles\nUpdate the escalatedTo field in the database:\n\nAssign the ticket to teamMember initially.\nIf unresolved, update escalatedTo to manager and notify them.\nIf still unresolved, escalate to admin.\nStep 3: Notify the New Assignee\nWhen escalation occurs:\n\nNotify the new responsible person via email, notification, or message.\nInclude ticket details and urgency level.\n",
      "fontSize": 16,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "3. Automatic Escalation Workflow\nThe escalation process can be automated using a job scheduler or a ticket management system. Here's how:\n\nStep 1: Set a Time Limit\nEach ticket has a time limit before it should escalate. For example:\n\nIf no action is taken within 24 hours, escalate to the next level.\nStep 2: Assign Escalation Roles\nUpdate the escalatedTo field in the database:\n\nAssign the ticket to teamMember initially.\nIf unresolved, update escalatedTo to manager and notify them.\nIf still unresolved, escalate to admin.\nStep 3: Notify the New Assignee\nWhen escalation occurs:\n\nNotify the new responsible person via email, notification, or message.\nInclude ticket details and urgency level.\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Fr2CPNv2A4r2xT4hlaN3P",
      "type": "text",
      "x": -10746.938632874539,
      "y": -83.68726494022314,
      "width": 703.1990356445312,
      "height": 400,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bAz",
      "roundness": null,
      "seed": 1772117180,
      "version": 3,
      "versionNonce": 1012231172,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734110657570,
      "link": null,
      "locked": false,
      "text": "const cron = require('node-cron');\nconst Ticket = require('../models/Ticket');\nconst checkEscalation = require('../middlewares/escalateMiddleware');\n\n// Run every hour to check for overdue tickets\ncron.schedule('0 * * * *', async () => {\n  const overdueTickets = await Ticket.find({\n    status: { $ne: 'Resolved' },\n    dueDate: { $lt: new Date() },\n  });\n\n  for (const ticket of overdueTickets) {\n    const req = { params: { ticketId: ticket._id } }; // Mock request object\n    const res = { status: () => ({ json: console.log }) }; // Mock response\n    const next = () => {}; // Mock next function\n\n    await checkEscalation(req, res, next);\n  }\n});\n",
      "fontSize": 16,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "const cron = require('node-cron');\nconst Ticket = require('../models/Ticket');\nconst checkEscalation = require('../middlewares/escalateMiddleware');\n\n// Run every hour to check for overdue tickets\ncron.schedule('0 * * * *', async () => {\n  const overdueTickets = await Ticket.find({\n    status: { $ne: 'Resolved' },\n    dueDate: { $lt: new Date() },\n  });\n\n  for (const ticket of overdueTickets) {\n    const req = { params: { ticketId: ticket._id } }; // Mock request object\n    const res = { status: () => ({ json: console.log }) }; // Mock response\n    const next = () => {}; // Mock next function\n\n    await checkEscalation(req, res, next);\n  }\n});\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "6690_kE4VA_D_du5zUQaE",
      "type": "text",
      "x": -6489.427488920806,
      "y": 15.14927295157014,
      "width": 1795.197509765625,
      "height": 280,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bB0",
      "roundness": null,
      "seed": 48637956,
      "version": 37,
      "versionNonce": 2046975036,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734115565528,
      "link": null,
      "locked": false,
      "text": "chat gpt \n\nmy task is to when user raise a query then , in database we have subcategory solution \nso , solution will sent to the user automatically after 1 hour \n\nthen if user  change the status to open or sent new message-query based on existing token , then it will assign to the team member's , \n\nif user is not change the status to open or sent new message then it is team member give respnse to the user ,  if team member is not giving answer to user then it will escelate to the manger  then admin \n\n& in all condion if user is not chaging the status in after once solution is provided  with in 24 hour , then  ticked is automatically closed.\n\n\nanswer =>  \n",
      "fontSize": 16,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "chat gpt \n\nmy task is to when user raise a query then , in database we have subcategory solution \nso , solution will sent to the user automatically after 1 hour \n\nthen if user  change the status to open or sent new message-query based on existing token , then it will assign to the team member's , \n\nif user is not change the status to open or sent new message then it is team member give respnse to the user ,  if team member is not giving answer to user then it will escelate to the manger  then admin \n\n& in all condion if user is not chaging the status in after once solution is provided  with in 24 hour , then  ticked is automatically closed.\n\n\nanswer =>  \n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ME6-Gkh39L5ydtQgTt8l3",
      "type": "text",
      "x": -6490.350020315897,
      "y": 334.4076149777545,
      "width": 2091.996704101562,
      "height": 4040,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bB3",
      "roundness": null,
      "seed": 1185939716,
      "version": 73,
      "versionNonce": 39902489,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734459324125,
      "link": null,
      "locked": false,
      "text": "To implement the desired workflow for your ticket system, you can break it down into several tasks:\n\nAutomatically send solution to the user after 1 hour: When a user raises a query, the system will look for a relevant solution in the database. After 1 hour, the solution will be sent to the user.\n\nAutomatically assign to a team member if the user doesn't change status or send a new message: If the user doesn't update the ticket status or send a new message, the system assigns the ticket to a team member for response.\n\nEscalate to manager and admin: If the team member doesn't respond to the ticket within a specific time frame, it should escalate to the manager and then the admin.\n\nAutomatically close ticket if no action within 24 hours: If no status change or new message is made within 24 hours after the solution is provided, the ticket should automatically be closed.\n\nKey Concepts and Plan:\nAutomatic Solution Sent (1 hour after ticket is raised): This will be handled using a cron job, which sends the solution after 1 hour of ticket creation.\nAssigning to Team Member: If no response from the user within 24 hours of the solution being sent, the ticket will be automatically assigned to a team member.\nEscalation Process: If the team member doesn't respond within the designated time frame, the ticket will escalate to a manager and then an admin.\nClosing Ticket (If no activity in 24 hours): This will automatically close tickets where no action is taken.\nImplementation\nTicket Model Update: You need to make sure your ticket model has relevant fields like status, assignedTo, escalatedTo, solutionSentAt, etc. Ensure these fields are updated properly when required.\nExample ticket model:\n\njavascript\nCopy code\nconst ticketSchema = new mongoose.Schema({\n  userId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"User\",\n    required: true\n  },\n  query: {\n    type: String,\n    required: true\n  },\n  status: {\n    type: String,\n    enum: ['Open', 'Closed', 'Resolved'],\n    default: 'Open'\n  },\n  assignedTo: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User', // Team Member, Manager, or Admin\n  },\n  escalatedTo: {\n    type: String,\n    enum: ['teamMember', 'manager', 'admin'],\n    required: false\n  },\n  solutionSentAt: {\n    type: Date,\n    required: false\n  },\n  responseTime: {\n    type: Date,\n    required: false\n  },\n  closedAt: {\n    type: Date,\n    required: false\n  },\n  dueDate: {\n    type: Date, // Date when escalation or closing should happen\n    required: false\n  }\n});\nCron Job for Automatic Solution Send: Create a cron job that checks for tickets raised by users and sends a solution after 1 hour.\njavascript\nCopy code\nconst cron = require(\"node-cron\");\nconst Ticket = require(\"../models/Ticket\");\nconst Solution = require(\"../models/Solution\"); // Assuming you have a Solution model\n\nconst sendSolutionJob = () => {\n  cron.schedule(\"0 * * * *\", async () => {  // Runs every hour\n    console.log(\"Running the ticket solution send job...\");\n\n    try {\n      const tickets = await Ticket.find({\n        status: \"Open\",\n        solutionSentAt: { $exists: false }, // Ensure no solution has been sent yet\n      });\n\n      for (const ticket of tickets) {\n        const solution = await Solution.findOne({ category: ticket.category, subcategory: ticket.subcategory });\n\n        if (solution) {\n          ticket.solutionSentAt = new Date();\n          ticket.dueDate = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours from now\n          await ticket.save();\n\n          // Send the solution to the user (e.g., via email or notification)\n          console.log(`Solution sent to user for ticket ID: ${ticket._id}`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error sending solution:\", error);\n    }\n  });\n};\n\nmodule.exports = { sendSolutionJob };\nTicket Status Change Handling: When the user changes the status or sends a new message, the ticket should be assigned to a team member.\njavascript\nCopy code\nconst updateTicketStatus = async (req, res) => {\n  const { ticketId } = req.params;\n  const { status, message } = req.body;\n\n  try {\n    const ticket = await Ticket.findById(ticketId);\n\n    if (!ticket) {\n      return res.status(404).json({ message: \"Ticket not found\" });\n    }\n\n    if (status === \"Open\" || message) {\n      // User sent a new message or changed the status to open\n      ticket.status = \"Open\";\n      ticket.assignedTo = teamMemberId;  // Assign to a team member\n\n      // Update response time or any other relevant data\n      ticket.responseTime = new Date();\n    }\n\n    await ticket.save();\n    res.json({ message: \"Ticket status updated\", ticket });\n  } catch (error) {\n    res.status(500).json({ message: \"Server error\", error });\n  }\n};\nEscalation Process (Escalating to Manager and Admin): Use a cron job to check for unresolved tickets that need escalation.\njavascript\nCopy code\nconst escalationJob = () => {\n  cron.schedule(\"0 * * * *\", async () => {\n    // Runs every hour\n    console.log(\"Running the ticket escalation job...\");\n\n    try {\n      const tickets = await Ticket.find({\n        status: { $ne: \"Resolved\" },\n        dueDate: { $lt: new Date() }, // Past due date\n      });\n\n      const escalationOrder = [\"teamMember\", \"manager\", \"admin\"];\n\n      for (const ticket of tickets) {\n        const currentEscalationIndex = escalationOrder.indexOf(ticket.escalatedTo || \"teamMember\");\n\n        if (currentEscalationIndex < escalationOrder.length - 1) {\n          // Escalate to the next level\n          ticket.escalatedTo = escalationOrder[currentEscalationIndex + 1];\n          ticket.dueDate = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours from now\n          await ticket.save();\n\n          console.log(`Escalated ticket ID: ${ticket._id} to ${ticket.escalatedTo}`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error running escalation job:\", error);\n    }\n  });\n};\n\nmodule.exports = { escalationJob };\nAutomatically Close Ticket if No Action Taken: To close the ticket if no status change or message is received within 24 hours of the solution being provided:\njavascript\nCopy code\nconst closeTicketJob = () => {\n  cron.schedule(\"0 * * * *\", async () => {  // Runs every hour\n    console.log(\"Running the ticket auto-close job...\");\n\n    try {\n      const tickets = await Ticket.find({\n        status: \"Open\",\n        solutionSentAt: { $exists: true },\n        dueDate: { $lt: new Date() },\n      });\n\n      for (const ticket of tickets) {\n        ticket.status = \"Closed\";\n        ticket.closedAt = new Date();\n        await ticket.save();\n\n        console.log(`Ticket ID: ${ticket._id} is automatically closed`);\n      }\n    } catch (error) {\n      console.error(\"Error closing tickets:\", error);\n    }\n  });\n};\n\nmodule.exports = { closeTicketJob };\nFinal Thoughts:\nThe cron jobs will handle automatic solution sending, ticket escalation, and closing tickets when needed.\nThe ticket status and escalation updates are managed in a way that users and team members don't need to intervene manually. However, team members should be able to respond to tickets, and the escalation process will ensure that\nunresolved tickets get the necessary attention.\n\n\n\n\n\n\n\n",
      "fontSize": 16,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "To implement the desired workflow for your ticket system, you can break it down into several tasks:\n\nAutomatically send solution to the user after 1 hour: When a user raises a query, the system will look for a relevant solution in the database. After 1 hour, the solution will be sent to the user.\n\nAutomatically assign to a team member if the user doesn't change status or send a new message: If the user doesn't update the ticket status or send a new message, the system assigns the ticket to a team member for response.\n\nEscalate to manager and admin: If the team member doesn't respond to the ticket within a specific time frame, it should escalate to the manager and then the admin.\n\nAutomatically close ticket if no action within 24 hours: If no status change or new message is made within 24 hours after the solution is provided, the ticket should automatically be closed.\n\nKey Concepts and Plan:\nAutomatic Solution Sent (1 hour after ticket is raised): This will be handled using a cron job, which sends the solution after 1 hour of ticket creation.\nAssigning to Team Member: If no response from the user within 24 hours of the solution being sent, the ticket will be automatically assigned to a team member.\nEscalation Process: If the team member doesn't respond within the designated time frame, the ticket will escalate to a manager and then an admin.\nClosing Ticket (If no activity in 24 hours): This will automatically close tickets where no action is taken.\nImplementation\nTicket Model Update: You need to make sure your ticket model has relevant fields like status, assignedTo, escalatedTo, solutionSentAt, etc. Ensure these fields are updated properly when required.\nExample ticket model:\n\njavascript\nCopy code\nconst ticketSchema = new mongoose.Schema({\n  userId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"User\",\n    required: true\n  },\n  query: {\n    type: String,\n    required: true\n  },\n  status: {\n    type: String,\n    enum: ['Open', 'Closed', 'Resolved'],\n    default: 'Open'\n  },\n  assignedTo: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User', // Team Member, Manager, or Admin\n  },\n  escalatedTo: {\n    type: String,\n    enum: ['teamMember', 'manager', 'admin'],\n    required: false\n  },\n  solutionSentAt: {\n    type: Date,\n    required: false\n  },\n  responseTime: {\n    type: Date,\n    required: false\n  },\n  closedAt: {\n    type: Date,\n    required: false\n  },\n  dueDate: {\n    type: Date, // Date when escalation or closing should happen\n    required: false\n  }\n});\nCron Job for Automatic Solution Send: Create a cron job that checks for tickets raised by users and sends a solution after 1 hour.\njavascript\nCopy code\nconst cron = require(\"node-cron\");\nconst Ticket = require(\"../models/Ticket\");\nconst Solution = require(\"../models/Solution\"); // Assuming you have a Solution model\n\nconst sendSolutionJob = () => {\n  cron.schedule(\"0 * * * *\", async () => {  // Runs every hour\n    console.log(\"Running the ticket solution send job...\");\n\n    try {\n      const tickets = await Ticket.find({\n        status: \"Open\",\n        solutionSentAt: { $exists: false }, // Ensure no solution has been sent yet\n      });\n\n      for (const ticket of tickets) {\n        const solution = await Solution.findOne({ category: ticket.category, subcategory: ticket.subcategory });\n\n        if (solution) {\n          ticket.solutionSentAt = new Date();\n          ticket.dueDate = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours from now\n          await ticket.save();\n\n          // Send the solution to the user (e.g., via email or notification)\n          console.log(`Solution sent to user for ticket ID: ${ticket._id}`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error sending solution:\", error);\n    }\n  });\n};\n\nmodule.exports = { sendSolutionJob };\nTicket Status Change Handling: When the user changes the status or sends a new message, the ticket should be assigned to a team member.\njavascript\nCopy code\nconst updateTicketStatus = async (req, res) => {\n  const { ticketId } = req.params;\n  const { status, message } = req.body;\n\n  try {\n    const ticket = await Ticket.findById(ticketId);\n\n    if (!ticket) {\n      return res.status(404).json({ message: \"Ticket not found\" });\n    }\n\n    if (status === \"Open\" || message) {\n      // User sent a new message or changed the status to open\n      ticket.status = \"Open\";\n      ticket.assignedTo = teamMemberId;  // Assign to a team member\n\n      // Update response time or any other relevant data\n      ticket.responseTime = new Date();\n    }\n\n    await ticket.save();\n    res.json({ message: \"Ticket status updated\", ticket });\n  } catch (error) {\n    res.status(500).json({ message: \"Server error\", error });\n  }\n};\nEscalation Process (Escalating to Manager and Admin): Use a cron job to check for unresolved tickets that need escalation.\njavascript\nCopy code\nconst escalationJob = () => {\n  cron.schedule(\"0 * * * *\", async () => {\n    // Runs every hour\n    console.log(\"Running the ticket escalation job...\");\n\n    try {\n      const tickets = await Ticket.find({\n        status: { $ne: \"Resolved\" },\n        dueDate: { $lt: new Date() }, // Past due date\n      });\n\n      const escalationOrder = [\"teamMember\", \"manager\", \"admin\"];\n\n      for (const ticket of tickets) {\n        const currentEscalationIndex = escalationOrder.indexOf(ticket.escalatedTo || \"teamMember\");\n\n        if (currentEscalationIndex < escalationOrder.length - 1) {\n          // Escalate to the next level\n          ticket.escalatedTo = escalationOrder[currentEscalationIndex + 1];\n          ticket.dueDate = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours from now\n          await ticket.save();\n\n          console.log(`Escalated ticket ID: ${ticket._id} to ${ticket.escalatedTo}`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error running escalation job:\", error);\n    }\n  });\n};\n\nmodule.exports = { escalationJob };\nAutomatically Close Ticket if No Action Taken: To close the ticket if no status change or message is received within 24 hours of the solution being provided:\njavascript\nCopy code\nconst closeTicketJob = () => {\n  cron.schedule(\"0 * * * *\", async () => {  // Runs every hour\n    console.log(\"Running the ticket auto-close job...\");\n\n    try {\n      const tickets = await Ticket.find({\n        status: \"Open\",\n        solutionSentAt: { $exists: true },\n        dueDate: { $lt: new Date() },\n      });\n\n      for (const ticket of tickets) {\n        ticket.status = \"Closed\";\n        ticket.closedAt = new Date();\n        await ticket.save();\n\n        console.log(`Ticket ID: ${ticket._id} is automatically closed`);\n      }\n    } catch (error) {\n      console.error(\"Error closing tickets:\", error);\n    }\n  });\n};\n\nmodule.exports = { closeTicketJob };\nFinal Thoughts:\nThe cron jobs will handle automatic solution sending, ticket escalation, and closing tickets when needed.\nThe ticket status and escalation updates are managed in a way that users and team members don't need to intervene manually. However, team members should be able to respond to tickets, and the escalation process will ensure that unresolved tickets get the necessary attention.\n\n\n\n\n\n\n\n",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "V2LCjFNb8sHRdVTUBRLAW",
      "type": "rectangle",
      "x": -3926.936296321913,
      "y": 7.158966866559467,
      "width": 1108.5944437196222,
      "height": 644.7059182559742,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bB5",
      "roundness": {
        "type": 3
      },
      "seed": 473486044,
      "version": 195,
      "versionNonce": 340547556,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734362712756,
      "link": null,
      "locked": false
    },
    {
      "id": "PR7UMfCGF36KaWSp1C9i6",
      "type": "rectangle",
      "x": -2308.4265235163057,
      "y": 34.923691897196704,
      "width": 1132.2354903875607,
      "height": 606.1175207998239,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bB6",
      "roundness": {
        "type": 3
      },
      "seed": 1883103588,
      "version": 191,
      "versionNonce": 1905972068,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365339714,
      "link": null,
      "locked": false
    },
    {
      "id": "W0TH6kcSgCw313wTTGgHn",
      "type": "text",
      "x": -3429.6798161825086,
      "y": -59.71968393333947,
      "width": 81.15998840332031,
      "height": 45,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bB8",
      "roundness": null,
      "seed": 691477724,
      "version": 14,
      "versionNonce": 1656844900,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363222427,
      "link": null,
      "locked": false,
      "text": "User",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "User",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "l2tNzOrp5yUqP39glRbA-",
      "type": "rectangle",
      "x": -3555.5465154012586,
      "y": 95.71364533098355,
      "width": 322.13330078125045,
      "height": 405.33331298828125,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bB9",
      "roundness": {
        "type": 3
      },
      "seed": 1113670884,
      "version": 139,
      "versionNonce": 221962980,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "zgjFcOcuT4x6GEmFoTi-W"
        }
      ],
      "updated": 1734362788838,
      "link": null,
      "locked": false
    },
    {
      "id": "zgjFcOcuT4x6GEmFoTi-W",
      "type": "text",
      "x": -3530.879675801649,
      "y": 178.38030182512418,
      "width": 272.79962158203125,
      "height": 240,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bB9V",
      "roundness": null,
      "seed": 620079324,
      "version": 169,
      "versionNonce": 546431324,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734362836658,
      "link": null,
      "locked": false,
      "text": "signup/login\n\nusername\n\nemail \n\npassword\n\nsubmit button\n\nif you have an already account?\nlogin link button",
      "fontSize": 16,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "l2tNzOrp5yUqP39glRbA-",
      "originalText": "signup/login\n\nusername\n\nemail \n\npassword\n\nsubmit button\n\nif you have an already account? login link button",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "6fpaaTJJ2w5nBNlvff-gb",
      "type": "rectangle",
      "x": -3922.021453551576,
      "y": 734.3680669357796,
      "width": 1108.5944437196222,
      "height": 644.7059182559742,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBC",
      "roundness": {
        "type": 3
      },
      "seed": 1862491364,
      "version": 269,
      "versionNonce": 1439258460,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734362859571,
      "link": null,
      "locked": false
    },
    {
      "id": "YINlGU-bgYUi9785iZw4k",
      "type": "text",
      "x": -3830.8989769587884,
      "y": 753.2422094611703,
      "width": 61.5999755859375,
      "height": 35,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBE",
      "roundness": null,
      "seed": 1312862044,
      "version": 11,
      "versionNonce": 2037922140,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363310315,
      "link": null,
      "locked": false,
      "text": "Logo",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Logo",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "t7pTo3S7bwJh3viN6lZFZ",
      "type": "text",
      "x": -3000.7897967909444,
      "y": 756.2993182401485,
      "width": 169.39993286132812,
      "height": 35,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBF",
      "roundness": null,
      "seed": 1871962212,
      "version": 57,
      "versionNonce": 58911844,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363304860,
      "link": null,
      "locked": false,
      "text": "user avator",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "user avator",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "5r6rWFS1Rvh9q_XMsPES8",
      "type": "rectangle",
      "x": -3840.7402177356985,
      "y": 968.3612195387525,
      "width": 970.1587495349704,
      "height": 80,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBG",
      "roundness": {
        "type": 3
      },
      "seed": 1500922460,
      "version": 280,
      "versionNonce": 887186404,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "K7A45QSNEqr0MPiZCckWw"
        }
      ],
      "updated": 1734363128813,
      "link": null,
      "locked": false
    },
    {
      "id": "K7A45QSNEqr0MPiZCckWw",
      "type": "text",
      "x": -3740.6608429682133,
      "y": 995.8612195387525,
      "width": 770,
      "height": 25,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBH",
      "roundness": null,
      "seed": 388861020,
      "version": 318,
      "versionNonce": 710100836,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363128813,
      "link": null,
      "locked": false,
      "text": "ticket-id  query category sub-category status solution    view details",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "5r6rWFS1Rvh9q_XMsPES8",
      "originalText": "ticket-id  query category sub-category status solution    view details",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "-qZcLseW3pPnzpv8o_1j7",
      "type": "rectangle",
      "x": -3841.6132384527727,
      "y": 1086.1390300139353,
      "width": 970.1587495349704,
      "height": 80,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBI",
      "roundness": {
        "type": 3
      },
      "seed": 1679247460,
      "version": 338,
      "versionNonce": 493653604,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "U3YRbOAnP8zpkiwy-FfTP"
        }
      ],
      "updated": 1734363124317,
      "link": null,
      "locked": false
    },
    {
      "id": "U3YRbOAnP8zpkiwy-FfTP",
      "type": "text",
      "x": -3741.5338636852875,
      "y": 1113.639030013935,
      "width": 770,
      "height": 25,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBJ",
      "roundness": null,
      "seed": 844667876,
      "version": 376,
      "versionNonce": 1561666020,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363124317,
      "link": null,
      "locked": false,
      "text": "ticket-id  query category sub-category status solution    view details",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "-qZcLseW3pPnzpv8o_1j7",
      "originalText": "ticket-id  query category sub-category status solution    view details",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ovDDooYOjSTeeEcCzz-q6",
      "type": "rectangle",
      "x": -3833.0418680100647,
      "y": 1192.8057766075917,
      "width": 970.1587495349704,
      "height": 80,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBK",
      "roundness": {
        "type": 3
      },
      "seed": 420055524,
      "version": 365,
      "versionNonce": 1406875876,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "lqUKGVo3ID8Pw6wUy7ioS"
        }
      ],
      "updated": 1734363120453,
      "link": null,
      "locked": false
    },
    {
      "id": "lqUKGVo3ID8Pw6wUy7ioS",
      "type": "text",
      "x": -3732.9624932425795,
      "y": 1220.3057766075917,
      "width": 770,
      "height": 25,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBL",
      "roundness": null,
      "seed": 1652993380,
      "version": 403,
      "versionNonce": 1430944868,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363120453,
      "link": null,
      "locked": false,
      "text": "ticket-id  query category sub-category status solution    view details",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "ovDDooYOjSTeeEcCzz-q6",
      "originalText": "ticket-id  query category sub-category status solution    view details",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "2aG38U-P6GzBAIxLxc9T-",
      "type": "text",
      "x": -3832.6766815912583,
      "y": 894.2342753752635,
      "width": 197.9998779296875,
      "height": 45,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBM",
      "roundness": null,
      "seed": 1957418332,
      "version": 111,
      "versionNonce": 1729337436,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363174806,
      "link": null,
      "locked": false,
      "text": "MY Tickets",
      "fontSize": 36,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "MY Tickets",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "JrdCLSrCmbkGDmx5Clhd3",
      "type": "text",
      "x": -3144.6576676868685,
      "y": 888.4009129775702,
      "width": 277.1998291015625,
      "height": 45,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBN",
      "roundness": null,
      "seed": 2069575140,
      "version": 195,
      "versionNonce": 1491509092,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363190437,
      "link": null,
      "locked": false,
      "text": "ADD NEW Ticket",
      "fontSize": 36,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "ADD NEW Ticket",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "M6rGBdzm9Cf1S_Kwg0JZq",
      "type": "rectangle",
      "x": -3909.836100184182,
      "y": 1490.9372791557819,
      "width": 1108.5944437196222,
      "height": 644.7059182559742,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBO",
      "roundness": {
        "type": 3
      },
      "seed": 1130836580,
      "version": 297,
      "versionNonce": 1486126044,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363341945,
      "link": null,
      "locked": false
    },
    {
      "id": "dbYVJP7g7PuB2HxvSLYBm",
      "type": "text",
      "x": -3818.713623591395,
      "y": 1509.8114216811725,
      "width": 61.5999755859375,
      "height": 35,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBP",
      "roundness": null,
      "seed": 874202596,
      "version": 39,
      "versionNonce": 1087414364,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363341945,
      "link": null,
      "locked": false,
      "text": "Logo",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Logo",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "S3OBzv3fHcE2FVBObe8ou",
      "type": "text",
      "x": -3029.8165831311744,
      "y": 1522.5654446706146,
      "width": 169.39993286132812,
      "height": 35,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBQ",
      "roundness": null,
      "seed": 738257252,
      "version": 102,
      "versionNonce": 810706276,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363936754,
      "link": null,
      "locked": false,
      "text": "user avator",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "user avator",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "7lopzPO2htdl7Fq6XbwE1",
      "type": "ellipse",
      "x": -3110.0871075523783,
      "y": 982.2978756457798,
      "width": 153.04353133491804,
      "height": 48.695638905400756,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBZ",
      "roundness": {
        "type": 2
      },
      "seed": 1927193060,
      "version": 120,
      "versionNonce": 2140598364,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734363995861,
      "link": null,
      "locked": false
    },
    {
      "id": "yYp4cduy-v1wfzKGOhftJ",
      "type": "rectangle",
      "x": -3006.264743286163,
      "y": 1884.2260061606617,
      "width": 196.48134747017784,
      "height": 120.31909699135667,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBc",
      "roundness": {
        "type": 3
      },
      "seed": 1780595428,
      "version": 609,
      "versionNonce": 2112530396,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "Mtt-qHszdd8iz1ZDdxcDJ"
        }
      ],
      "updated": 1734365271948,
      "link": null,
      "locked": false
    },
    {
      "id": "Mtt-qHszdd8iz1ZDdxcDJ",
      "type": "text",
      "x": -2999.4039828811524,
      "y": 1894.38555465634,
      "width": 182.75982666015625,
      "height": 100,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBd",
      "roundness": null,
      "seed": 1208279780,
      "version": 501,
      "versionNonce": 847334492,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365271948,
      "link": null,
      "locked": false,
      "text": "message if solution not\nworked\nquery\nstatus \nsubmit",
      "fontSize": 16,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "yYp4cduy-v1wfzKGOhftJ",
      "originalText": "message if solution not worked\nquery\nstatus \nsubmit",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "JnoFKAZstk0e8ffdV_tWp",
      "type": "rectangle",
      "x": -3825.2260062940095,
      "y": 1611.979582916958,
      "width": 800.0038475788405,
      "height": 488.17311864909016,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBe",
      "roundness": {
        "type": 3
      },
      "seed": 1288895708,
      "version": 1066,
      "versionNonce": 1155954396,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365296743,
      "link": null,
      "locked": false
    },
    {
      "id": "YEydJfz9x7sNE8TOZXtmd",
      "type": "text",
      "x": -3751.1211666527256,
      "y": 1648.7629009154564,
      "width": 101.91742192700288,
      "height": 30.254371382779492,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBf",
      "roundness": null,
      "seed": 144867300,
      "version": 546,
      "versionNonce": 1449495900,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365289291,
      "link": null,
      "locked": false,
      "text": "ticekt id",
      "fontSize": 24.203497106223594,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "ticekt id",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "vgn9DeFE1JgsSDUGzFPsJ",
      "type": "text",
      "x": -3227.139166133778,
      "y": 1638.4635572828415,
      "width": 80.94683844389048,
      "height": 30.254371382779492,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBg",
      "roundness": null,
      "seed": 630280668,
      "version": 515,
      "versionNonce": 1434681820,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365289291,
      "link": null,
      "locked": false,
      "text": "status",
      "fontSize": 24.203497106223594,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "status",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "z8KIVJGGehgiGcVcXSvzH",
      "type": "rectangle",
      "x": -3760.487146598577,
      "y": 1713.1339319210701,
      "width": 718.0124911786593,
      "height": 66.21017445471503,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBi",
      "roundness": {
        "type": 3
      },
      "seed": 1859377380,
      "version": 590,
      "versionNonce": 367978076,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "zU-MgDrATdFbL9dkjstRC"
        }
      ],
      "updated": 1734365289291,
      "link": null,
      "locked": false
    },
    {
      "id": "zU-MgDrATdFbL9dkjstRC",
      "type": "text",
      "x": -3508.0213368002633,
      "y": 1731.1118334570378,
      "width": 213.08087158203125,
      "height": 30.254371382779492,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBj",
      "roundness": null,
      "seed": 593290332,
      "version": 749,
      "versionNonce": 1819917020,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365289291,
      "link": null,
      "locked": false,
      "text": "query   solution   ",
      "fontSize": 24.203497106223594,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "z8KIVJGGehgiGcVcXSvzH",
      "originalText": "query   solution   ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "drPSfyZHQ2dokicER_gLI",
      "type": "rectangle",
      "x": -3761.9585174849185,
      "y": 1800.6785071477166,
      "width": 718.0124911786593,
      "height": 66.21017445471503,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBk",
      "roundness": {
        "type": 3
      },
      "seed": 778633948,
      "version": 616,
      "versionNonce": 1136000860,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "wy6zH3z23JtBS0JS27wGC"
        }
      ],
      "updated": 1734365289291,
      "link": null,
      "locked": false
    },
    {
      "id": "wy6zH3z23JtBS0JS27wGC",
      "type": "text",
      "x": -3514.332704024495,
      "y": 1818.6564086836843,
      "width": 222.7608642578125,
      "height": 30.254371382779492,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBl",
      "roundness": null,
      "seed": 410797916,
      "version": 775,
      "versionNonce": 1677046748,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365289291,
      "link": null,
      "locked": false,
      "text": "query   solution    ",
      "fontSize": 24.203497106223594,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "drPSfyZHQ2dokicER_gLI",
      "originalText": "query   solution    ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "vRw62vh1T6-WmjN0kpWN7",
      "type": "rectangle",
      "x": -3773.729035559163,
      "y": 1902.2007409687094,
      "width": 718.0124911786593,
      "height": 66.21017445471503,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBm",
      "roundness": {
        "type": 3
      },
      "seed": 34279772,
      "version": 652,
      "versionNonce": 994760796,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "4DaD7T298f0OuL9gAtflH"
        }
      ],
      "updated": 1734365289291,
      "link": null,
      "locked": false
    },
    {
      "id": "4DaD7T298f0OuL9gAtflH",
      "type": "text",
      "x": -3664.2972528604587,
      "y": 1920.178642504677,
      "width": 499.14892578125,
      "height": 30.254371382779492,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBn",
      "roundness": null,
      "seed": 2044233180,
      "version": 805,
      "versionNonce": 629632220,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365289291,
      "link": null,
      "locked": false,
      "text": "query   solution    button(raise new issue)",
      "fontSize": 24.203497106223594,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "vRw62vh1T6-WmjN0kpWN7",
      "originalText": "query   solution    button(raise new issue)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "QSBqlWVko1CqkP2gQTqyk",
      "type": "rectangle",
      "x": -4254.585888521883,
      "y": 1391.6421119664376,
      "width": 410.2128049160574,
      "height": 202.55321746176878,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBo",
      "roundness": {
        "type": 3
      },
      "seed": 223709532,
      "version": 529,
      "versionNonce": 1617871332,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "hBwEBn_Y7Iri1542Q9HCs"
        }
      ],
      "updated": 1734365314528,
      "link": null,
      "locked": false
    },
    {
      "id": "hBwEBn_Y7Iri1542Q9HCs",
      "type": "text",
      "x": -4244.947427348034,
      "y": 1405.4187206973218,
      "width": 390.9358825683594,
      "height": 175,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBp",
      "roundness": null,
      "seed": 1958513508,
      "version": 731,
      "versionNonce": 2021975396,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365314528,
      "link": null,
      "locked": false,
      "text": "here is a catch that\n1. to show complete process\nof ticket solution \n2. you need to store {query,\nsolution} to array form.",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "QSBqlWVko1CqkP2gQTqyk",
      "originalText": "here is a catch that\n1. to show complete process of ticket solution \n2. you need to store {query, solution} to array form.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "_qNQmaN7EbH7LWweoyIjn",
      "type": "diamond",
      "x": -1929.7305869847141,
      "y": 137.90534084957085,
      "width": 402.8570992606026,
      "height": 380,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBq",
      "roundness": {
        "type": 2
      },
      "seed": 1216367204,
      "version": 134,
      "versionNonce": 516523876,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "bsuQyDxoBGD_1v-PNKJav"
        }
      ],
      "updated": 1734365371737,
      "link": null,
      "locked": false
    },
    {
      "id": "bsuQyDxoBGD_1v-PNKJav",
      "type": "text",
      "x": -1787.4162908072587,
      "y": 237.90534084957085,
      "width": 117.79995727539062,
      "height": 180,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBr",
      "roundness": null,
      "seed": 1238853732,
      "version": 115,
      "versionNonce": 2053831396,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365371737,
      "link": null,
      "locked": false,
      "text": "login &\nsignup\nwith\ngoogle",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "_qNQmaN7EbH7LWweoyIjn",
      "originalText": "login & signup with google",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "qCVBArh6ZfUjCouleSvKm",
      "type": "text",
      "x": -1809.7509879856907,
      "y": -3.5231978815953084,
      "width": 123.61196899414062,
      "height": 45,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBs",
      "roundness": null,
      "seed": 36881116,
      "version": 15,
      "versionNonce": 455168476,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365386057,
      "link": null,
      "locked": false,
      "text": "ADMIN",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "ADMIN",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "mJZ8hQA2VUAjkXWG9RFJv",
      "type": "rectangle",
      "x": -2322.225351623656,
      "y": 715.3968672135624,
      "width": 1132.2354903875607,
      "height": 606.1175207998239,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBt",
      "roundness": {
        "type": 3
      },
      "seed": 153368548,
      "version": 207,
      "versionNonce": 2066585436,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365453967,
      "link": null,
      "locked": false
    },
    {
      "id": "lkz5-9BoyqxkaksSDEMBP",
      "type": "text",
      "x": -2181.870168575655,
      "y": 728.0962434660364,
      "width": 39.59999084472656,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBu",
      "roundness": null,
      "seed": 583780964,
      "version": 40,
      "versionNonce": 1625106148,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365486970,
      "link": null,
      "locked": false,
      "text": "logo",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "logo",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Zy-Y2G_7-OG7WeHqd0Lvd",
      "type": "text",
      "x": -1336.129028310441,
      "y": 732.9646484567849,
      "width": 84.95997619628906,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBv",
      "roundness": null,
      "seed": 526737244,
      "version": 46,
      "versionNonce": 10315228,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365493182,
      "link": null,
      "locked": false,
      "text": "AVATOR",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "AVATOR",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "u_ruvmZC_s76a5j64urj0",
      "type": "rectangle",
      "x": -2236.9544931093687,
      "y": 983.1342895386575,
      "width": 970.1587495349704,
      "height": 80,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBx",
      "roundness": {
        "type": 3
      },
      "seed": 826400348,
      "version": 511,
      "versionNonce": 589223004,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "ZT0kXJisOBLAd1IYIPmGI"
        }
      ],
      "updated": 1734367219586,
      "link": null,
      "locked": false
    },
    {
      "id": "ZT0kXJisOBLAd1IYIPmGI",
      "type": "text",
      "x": -2191.8751183418835,
      "y": 1010.6342895386575,
      "width": 880,
      "height": 25,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bBy",
      "roundness": null,
      "seed": 313373404,
      "version": 565,
      "versionNonce": 1769728220,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367219586,
      "link": null,
      "locked": false,
      "text": "ticket-id  query category sub-category status solution  AssignTo    view details",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "u_ruvmZC_s76a5j64urj0",
      "originalText": "ticket-id  query category sub-category status solution  AssignTo    view details",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "SwkiZuWU0BNJIgcDcQ2Xk",
      "type": "text",
      "x": -2199.290981378991,
      "y": 909.0073453751685,
      "width": 138.7999267578125,
      "height": 45,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bC3",
      "roundness": null,
      "seed": 586574172,
      "version": 343,
      "versionNonce": 2084728156,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367219586,
      "link": null,
      "locked": false,
      "text": "Tickets",
      "fontSize": 36,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Tickets",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Ck-DM8MX94fMZL-dJ_Zmt",
      "type": "text",
      "x": -1663.699191373749,
      "y": 902.1350576084108,
      "width": 377.3997802734375,
      "height": 45,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bC4",
      "roundness": null,
      "seed": 328785372,
      "version": 520,
      "versionNonce": 1824809436,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367219586,
      "link": null,
      "locked": false,
      "text": "sort=> risk or time",
      "fontSize": 36,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "sort=> risk or time",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "8ESuTMPONKKxEq6GFXiQd",
      "type": "ellipse",
      "x": -1452.2754406066488,
      "y": 997.0709456456847,
      "width": 153.04353133491804,
      "height": 48.695638905400756,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bC5",
      "roundness": {
        "type": 2
      },
      "seed": 553173596,
      "version": 389,
      "versionNonce": 1377027676,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367219586,
      "link": null,
      "locked": false
    },
    {
      "id": "xKJfFcZH3-xMtV5VEGVFy",
      "type": "rectangle",
      "x": -2244.628280934856,
      "y": 1092.7789963417958,
      "width": 970.1587495349704,
      "height": 80,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bC6",
      "roundness": {
        "type": 3
      },
      "seed": 548051556,
      "version": 469,
      "versionNonce": 285383388,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "_ILmBWi7pWVau85V3ptSK"
        }
      ],
      "updated": 1734367219586,
      "link": null,
      "locked": false
    },
    {
      "id": "_ILmBWi7pWVau85V3ptSK",
      "type": "text",
      "x": -2199.5489061673707,
      "y": 1120.2789963417958,
      "width": 880,
      "height": 25,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bC7",
      "roundness": null,
      "seed": 1689365988,
      "version": 523,
      "versionNonce": 606265180,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367219586,
      "link": null,
      "locked": false,
      "text": "ticket-id  query category sub-category status solution  AssignTo    view details",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "xKJfFcZH3-xMtV5VEGVFy",
      "originalText": "ticket-id  query category sub-category status solution  AssignTo    view details",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ldj2r5w84m9ESVHNJDPK3",
      "type": "ellipse",
      "x": -1464.9667039128383,
      "y": 1106.7156524488232,
      "width": 153.04353133491804,
      "height": 48.695638905400756,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bC8",
      "roundness": {
        "type": 2
      },
      "seed": 1300910436,
      "version": 440,
      "versionNonce": 1673958364,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367219586,
      "link": null,
      "locked": false
    },
    {
      "id": "SNT6qhZgZkE7JORF6X2e6",
      "type": "rectangle",
      "x": -2235.087252632964,
      "y": 1206.6881430346416,
      "width": 970.1587495349704,
      "height": 80,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bC9",
      "roundness": {
        "type": 3
      },
      "seed": 745992932,
      "version": 586,
      "versionNonce": 1308604508,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "PW1CRBPWHQLPHGXY6IOZv"
        }
      ],
      "updated": 1734367219586,
      "link": null,
      "locked": false
    },
    {
      "id": "PW1CRBPWHQLPHGXY6IOZv",
      "type": "text",
      "x": -2190.007877865479,
      "y": 1234.1881430346416,
      "width": 880,
      "height": 25,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCA",
      "roundness": null,
      "seed": 1449064036,
      "version": 640,
      "versionNonce": 1319128284,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367219586,
      "link": null,
      "locked": false,
      "text": "ticket-id  query category sub-category status solution  AssignTo    view details",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "SNT6qhZgZkE7JORF6X2e6",
      "originalText": "ticket-id  query category sub-category status solution  AssignTo    view details",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "fhYjApbfMOPZU8Uaiopy0",
      "type": "ellipse",
      "x": -1450.4082001302436,
      "y": 1220.624799141669,
      "width": 153.04353133491804,
      "height": 48.695638905400756,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCB",
      "roundness": {
        "type": 2
      },
      "seed": 461015524,
      "version": 464,
      "versionNonce": 121262428,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367219586,
      "link": null,
      "locked": false
    },
    {
      "id": "U0jToAtBK7shaOKu84QqW",
      "type": "rectangle",
      "x": -2333.6267363010734,
      "y": 1422.7829569665544,
      "width": 1108.5944437196222,
      "height": 644.7059182559742,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCC",
      "roundness": {
        "type": 3
      },
      "seed": 1298601060,
      "version": 355,
      "versionNonce": 439589604,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365741366,
      "link": null,
      "locked": false
    },
    {
      "id": "JZiLJTu21DFf_Bxo1g828",
      "type": "text",
      "x": -2242.504259708286,
      "y": 1441.6570994919455,
      "width": 61.5999755859375,
      "height": 35,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCD",
      "roundness": null,
      "seed": 2010048484,
      "version": 97,
      "versionNonce": 910597732,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365741366,
      "link": null,
      "locked": false,
      "text": "Logo",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Logo",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "uwx_UHJmX4TBUFTQqu-dx",
      "type": "text",
      "x": -1453.6072192480656,
      "y": 1454.4111224813876,
      "width": 169.39993286132812,
      "height": 35,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCE",
      "roundness": null,
      "seed": 1022380900,
      "version": 160,
      "versionNonce": 1882010084,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365741366,
      "link": null,
      "locked": false,
      "text": "user avator",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "user avator",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "IelC7Cjk93o1-Nt9ykqd2",
      "type": "rectangle",
      "x": -1430.0553794030543,
      "y": 1816.0716839714344,
      "width": 196.48134747017784,
      "height": 120.31909699135667,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCF",
      "roundness": {
        "type": 3
      },
      "seed": 790183652,
      "version": 667,
      "versionNonce": 1727354212,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "VA-ucaVrlhxuOWm_-YBlC"
        }
      ],
      "updated": 1734365741366,
      "link": null,
      "locked": false
    },
    {
      "id": "VA-ucaVrlhxuOWm_-YBlC",
      "type": "text",
      "x": -1423.1946189980436,
      "y": 1836.2312324671127,
      "width": 182.75982666015625,
      "height": 80,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCG",
      "roundness": null,
      "seed": 1725416036,
      "version": 574,
      "versionNonce": 361466716,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365802981,
      "link": null,
      "locked": false,
      "text": "message if solution not\nworked\nsolution\nsubmit",
      "fontSize": 16,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "IelC7Cjk93o1-Nt9ykqd2",
      "originalText": "message if solution not worked\nsolution\nsubmit",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "G8j7dthWM88UAnj-6GumL",
      "type": "rectangle",
      "x": -2249.0166424109007,
      "y": 1543.8252607277307,
      "width": 800.0038475788405,
      "height": 488.17311864909016,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCH",
      "roundness": {
        "type": 3
      },
      "seed": 989451748,
      "version": 1124,
      "versionNonce": 1721912420,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365741366,
      "link": null,
      "locked": false
    },
    {
      "id": "Zic_CL7kl-hR3wt2W4gef",
      "type": "text",
      "x": -2174.9118027696163,
      "y": 1580.6085787262289,
      "width": 101.91742192700288,
      "height": 30.254371382779492,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCI",
      "roundness": null,
      "seed": 2022537572,
      "version": 604,
      "versionNonce": 887300068,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365741366,
      "link": null,
      "locked": false,
      "text": "ticekt id",
      "fontSize": 24.203497106223594,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "ticekt id",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "If6oQ6rikVEewdmY3io35",
      "type": "text",
      "x": -1650.579971590736,
      "y": 1570.3092350936142,
      "width": 80.24717712402344,
      "height": 30.254371382779492,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCJ",
      "roundness": null,
      "seed": 450931940,
      "version": 574,
      "versionNonce": 1745573476,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365746308,
      "link": null,
      "locked": false,
      "text": "status",
      "fontSize": 24.203497106223594,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "status",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "MhtXlfP_Js-ReH09Hw1gS",
      "type": "rectangle",
      "x": -2184.277782715468,
      "y": 1644.9796097318429,
      "width": 718.0124911786593,
      "height": 66.21017445471503,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCK",
      "roundness": {
        "type": 3
      },
      "seed": 58814564,
      "version": 648,
      "versionNonce": 1853847268,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "EF6I1u6EADIQPlaA2SDT_"
        }
      ],
      "updated": 1734365741366,
      "link": null,
      "locked": false
    },
    {
      "id": "EF6I1u6EADIQPlaA2SDT_",
      "type": "text",
      "x": -1931.8119729171544,
      "y": 1662.9575112678106,
      "width": 213.08087158203125,
      "height": 30.254371382779492,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCL",
      "roundness": null,
      "seed": 842908644,
      "version": 807,
      "versionNonce": 1287060068,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365741366,
      "link": null,
      "locked": false,
      "text": "query   solution   ",
      "fontSize": 24.203497106223594,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "MhtXlfP_Js-ReH09Hw1gS",
      "originalText": "query   solution   ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "q1h8ct7lesX-dpD4Yk3jI",
      "type": "rectangle",
      "x": -2185.749153601809,
      "y": 1732.5241849584893,
      "width": 718.0124911786593,
      "height": 66.21017445471503,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCM",
      "roundness": {
        "type": 3
      },
      "seed": 2099488612,
      "version": 674,
      "versionNonce": 271715812,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "d7ayinsDOsJXFKMR69t0V"
        }
      ],
      "updated": 1734365741366,
      "link": null,
      "locked": false
    },
    {
      "id": "d7ayinsDOsJXFKMR69t0V",
      "type": "text",
      "x": -1938.123340141386,
      "y": 1750.502086494457,
      "width": 222.7608642578125,
      "height": 30.254371382779492,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCN",
      "roundness": null,
      "seed": 1216420580,
      "version": 833,
      "versionNonce": 1778299236,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365741367,
      "link": null,
      "locked": false,
      "text": "query   solution    ",
      "fontSize": 24.203497106223594,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "q1h8ct7lesX-dpD4Yk3jI",
      "originalText": "query   solution    ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "3oEcsDl_UK2uCugwcEK0V",
      "type": "rectangle",
      "x": -2197.5196716760543,
      "y": 1834.046418779482,
      "width": 718.0124911786593,
      "height": 66.21017445471503,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCO",
      "roundness": {
        "type": 3
      },
      "seed": 1055137380,
      "version": 710,
      "versionNonce": 963306724,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "Oxio3W73b9R1r5xkFIYCw"
        }
      ],
      "updated": 1734365741367,
      "link": null,
      "locked": false
    },
    {
      "id": "Oxio3W73b9R1r5xkFIYCw",
      "type": "text",
      "x": -2089.3221113894588,
      "y": 1852.0243203154498,
      "width": 501.61737060546875,
      "height": 30.254371382779492,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCP",
      "roundness": null,
      "seed": 152744420,
      "version": 881,
      "versionNonce": 207618660,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365787404,
      "link": null,
      "locked": false,
      "text": "query   solution    button(submit solution)",
      "fontSize": 24.203497106223594,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "3oEcsDl_UK2uCugwcEK0V",
      "originalText": "query   solution    button(submit solution)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "X0UE5kz6KThm46i_tld19",
      "type": "text",
      "x": -1890.0896098113603,
      "y": 1572.4204641569706,
      "width": 108.19689745349788,
      "height": 28.772855992878036,
      "angle": 0,
      "strokeColor": "#343a40",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCQ",
      "roundness": null,
      "seed": 1585917788,
      "version": 648,
      "versionNonce": 318034652,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365770249,
      "link": null,
      "locked": false,
      "text": "Assign to",
      "fontSize": 23.018284794302428,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Assign to",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "feZc4LfTbvZXE4p4flP7-",
      "type": "rectangle",
      "x": -1203.8461287858263,
      "y": 648.9987352323524,
      "width": 410.2128049160574,
      "height": 202.55321746176878,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCR",
      "roundness": {
        "type": 3
      },
      "seed": 1166704868,
      "version": 532,
      "versionNonce": 864196580,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "mQ7prkYoRf6ZpxJVwRWPH"
        }
      ],
      "updated": 1734365843753,
      "link": null,
      "locked": false
    },
    {
      "id": "mQ7prkYoRf6ZpxJVwRWPH",
      "type": "text",
      "x": -1188.747645639321,
      "y": 680.2753439632368,
      "width": 380.0158386230469,
      "height": 140,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCS",
      "roundness": null,
      "seed": 1641071716,
      "version": 869,
      "versionNonce": 228819164,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734365911641,
      "link": null,
      "locked": false,
      "text": "here is a catch that\nticket's page \n1. only admin * manager  can\nsee only which it",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "feZc4LfTbvZXE4p4flP7-",
      "originalText": "here is a catch that\nticket's page \n1. only admin * manager  can see only which it",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "QmHlB_Sd_BuUpXNIiBKeQ",
      "type": "rectangle",
      "x": -1684.962084065186,
      "y": 794.0204617874205,
      "width": 174.57773605955086,
      "height": 85,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCX",
      "roundness": {
        "type": 3
      },
      "seed": 49753700,
      "version": 716,
      "versionNonce": 1163349340,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "VHR4dUZKxy09N4-BPf-v6"
        }
      ],
      "updated": 1734367382888,
      "link": null,
      "locked": false
    },
    {
      "id": "VHR4dUZKxy09N4-BPf-v6",
      "type": "text",
      "x": -1677.4431516433208,
      "y": 799.0204617874205,
      "width": 159.5398712158203,
      "height": 75,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCY",
      "roundness": null,
      "seed": 1574263516,
      "version": 551,
      "versionNonce": 4014556,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367382888,
      "link": null,
      "locked": false,
      "text": "view all ticket\nbutton  => for\nmanager & admin",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "QmHlB_Sd_BuUpXNIiBKeQ",
      "originalText": "view all ticket button  => for manager & admin ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "47uPCYvV8WKojACVeCiNS",
      "type": "ellipse",
      "x": -2206.4759008452697,
      "y": 795.4901587522107,
      "width": 153.9238191804775,
      "height": 85,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCZ",
      "roundness": {
        "type": 2
      },
      "seed": 1114403172,
      "version": 81,
      "versionNonce": 919592036,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "yxK7xS6QsOOCwmGnJOY7q"
        }
      ],
      "updated": 1734367380490,
      "link": null,
      "locked": false
    },
    {
      "id": "yxK7xS6QsOOCwmGnJOY7q",
      "type": "text",
      "x": -2172.304251648359,
      "y": 812.9381205517825,
      "width": 85.73994445800781,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCa",
      "roundness": null,
      "seed": 796659804,
      "version": 45,
      "versionNonce": 1222553572,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367380490,
      "link": null,
      "locked": false,
      "text": "new\ncategory",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "47uPCYvV8WKojACVeCiNS",
      "originalText": "new category",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "dlKu2oJ024WvcB3O8kAj_",
      "type": "ellipse",
      "x": -2040.9351755414693,
      "y": 795.10134997248,
      "width": 153.9238191804775,
      "height": 85,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCb",
      "roundness": {
        "type": 2
      },
      "seed": 1066224092,
      "version": 128,
      "versionNonce": 501717476,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "9RzvpODKrDB0WXHOj6IBd"
        }
      ],
      "updated": 1734367378282,
      "link": null,
      "locked": false
    },
    {
      "id": "9RzvpODKrDB0WXHOj6IBd",
      "type": "text",
      "x": -2006.4135202410428,
      "y": 812.5493117720517,
      "width": 85.03993225097656,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCc",
      "roundness": null,
      "seed": 729787996,
      "version": 113,
      "versionNonce": 1092795748,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367378282,
      "link": null,
      "locked": false,
      "text": "new sub-\ncatorgy",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "dlKu2oJ024WvcB3O8kAj_",
      "originalText": "new sub-catorgy",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "nGJMqT29DwaeZ_SIawqOs",
      "type": "ellipse",
      "x": -1871.038210842406,
      "y": 793.6492609417845,
      "width": 153.9238191804775,
      "height": 85,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCd",
      "roundness": {
        "type": 2
      },
      "seed": 1067136220,
      "version": 84,
      "versionNonce": 429147236,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "CttQGpMjfkC-L4w-LDkZa"
        }
      ],
      "updated": 1734367377025,
      "link": null,
      "locked": false
    },
    {
      "id": "CttQGpMjfkC-L4w-LDkZa",
      "type": "text",
      "x": -1832.386565917956,
      "y": 811.0972227413563,
      "width": 76.77995300292969,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bCe",
      "roundness": null,
      "seed": 1754806620,
      "version": 65,
      "versionNonce": 651565028,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1734367377025,
      "link": null,
      "locked": false,
      "text": "new\nsolution",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "nGJMqT29DwaeZ_SIawqOs",
      "originalText": "new solution",
      "autoResize": true,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}